[[{"l":"Welcome to my Personal Site"}],[{"l":"Connecting wallet address to user","p":["The user needs to send an mail to connect their wallet address with themselves. The email address should be a Sabanci University address, the subject section should only include the word “address” and the body of the mail should only have the waller address. An example mail can be seen below. wallet address mail"]}],[{"l":"Developer Documentation"},{"i":"how-to-install-and-run-the-front-end","l":"How to install and run the front-end:","p":["Download and install node.js node.js reference link: https://nodejs.org/en/download/","Download and install npm or yarn, you need to install npm to download yarn yarn reference link: https://classic.yarnpkg.com/lang/en/docs/install/#windows-stable npm reference link: https://docs.npmjs.com/downloading-and-installing-node-js-and-npm","Install the dependency packages in the project folder navigate to directory using\\","install the dependencies using \"npm install\" or \"yarn install\" install next if needed using \"npm install next\" or \"yarn install next\" Clone the repo from: https://github.com/Cem-Kaya/SU_Govern","To run the front-end: in the project folder change the directory using\\","run the front end using \"npm run dev\" or \"yarn dev\"","Deploying Contracts on TestNet: Remix IDE was used for this. Contracts are compiled in this order: 1) token.sol, 2) creator.sol, 3) newDAO1.sol 4) newFactory1.sol. Contracts are deployed in this order: 1) creator.sol, 2) newFactory1.sol. While deploying newFactory1.sol use the address of creator.sol.","Connecting to Front End: The files that needs modification are found in the directory below.\\","In dao.js and index.js, the address of daoFactory should be typed in the statement where the daoFactoryContract is defined. In dao.js, line 114, and in index.js, line 180. In addition to this, in order to get YK privileges, the first admin of the Top DAO needs to withdraw 1 YK token from TOP DAO. This can be done through the frontend. This is a one time case during creation. The first contract needs to be deployed using Remix IDE."]},{"l":"Contracts"},{"i":"creatorsol","l":"Creator.sol","p":["This file includes a createToken function which is used to create new tokens and receive their addresses."]},{"i":"migrationssol","l":"Migrations.sol","p":["This file contains the Migrations contract. The contract checks if the migration request is from the owner of the contract and if so completes the task."]},{"i":"newfactory1sol","l":"newFactory1.sol","p":["This file contains the DAOFactory contract. This contract creates the Top DAO, which is the DAO that supervises all of it’s sub-DAO’s and mints 1000 tokens to this factory. This function also inludes the creation and assignment of the YK tokens to the factory.","The below function is used to create a childDAO under the Top DAO. It also checks if the requesting user has a YK token.","The below function is used to mint YK tokens for a DAO.","The below function is used to give creator privileges.","The below function is used to get the address of the parent DAO of a child DAO.","The below function is used to get the address of the current DAO.","The below function is used to delete a DAO. The function checks if the request is sent by a YK member and if so continues with deletion and if not throws an error message. The function also checks if the DAO to be deleted has any child DAOs and if they exist deletes them as well."]},{"i":"tokensol","l":"Token.sol","p":["The below function is used for transfer processes. The function checks the balance of the owner to make sure there are enough credits and gives an option to have a debt if balance is insufficient and modifies the balance amount accordingly.","The below function allows the user to take back all of the delegated tokens."]},{"l":"Adding an Image to a DAO","p":["The constructor of newdao1.sol file includes an imageurl variable. During the creation of a dao a line like the following can be used to pass the link address of an image to be used for the DAO."]}],[{"l":"Setting up metamask","p":["First, visit the MetaMask website at metamask.io.","Click the \"Get Chrome Extension\" button, or \"Get Firefox Extension\" if you use Firefox.","Follow the instructions for adding the extension to your browser.","Once installed, click the MetaMask icon in your browser to launch it.","You'll be prompted to create a new account or import an existing one. Follow the prompts to create your account.","Set a strong password and backup your seed phrase. This phrase is important because it's the only way to recover your account if you lose your password or if your computer crashes.","You'll also be asked to confirm that you've backed up your seed phrase by entering it in the correct order.","Finally, you're all set! You can now use MetaMask to interact with Ethereum-based dApps and store your ETH and ERC-20 tokens securely, but you will need to change to MATIC network to interact with SUGovern."]}],[{"i":"what-is-sugovern","l":"What is SUGovern?","p":["SUGovern is a decentralized voting platform to be used by university clubs."]},{"l":"Decentralized","p":["SUGovern is used to create DAOs or Decentralized Autonomous Organizations. SUGovern uses a blockchain network for transparency and security."]}]]